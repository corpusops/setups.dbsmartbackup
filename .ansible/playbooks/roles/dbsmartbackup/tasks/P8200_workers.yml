---
- service:
    state: "{{cops_dbsmartbackup_vars.activated | ternary('started', 'stopped')}}"
    enabled: "{{cops_dbsmartbackup_vars.activated | ternary(True, False)}}"
    name: "{{item}}"
  with_items: "{{cops_dbsmartbackup_vars.services}}"
  when: "cops_dbsmartbackup_s_workers_service and corpusops_vars.has_services_manager"
  tags: [cops_dbsmartbackup_s_workers_service]
- systemd:
    enabled: "{{cops_dbsmartbackup_vars.activated | ternary(True, False)}}"
    daemon_reload: yes
    name: "{{item}}"
  with_items: "{{cops_dbsmartbackup_vars.reconfigure_services}}"
  when: "cops_dbsmartbackup_s_workers_service and corpusops_vars.has_services_manager"
  tags: [cops_dbsmartbackup_s_workers_service]
# check cron is running
- shell: |
    service cron status >/dev/null 2>&1
    echo $?
  changed_when: false
  when: "(corpusops_vars.has_services_manager and
          cops_dbsmartbackup_vars.activated)"
  register: cops_dbsmartbackup_check
  until: "'0' == cops_dbsmartbackup_check.stdout.strip()"
  retries: 10
  delay: 1
  tags: [dbsmartbackup, workers_check, dbsmartbackup_workers_check]
  become: true
  become_user: postgres
