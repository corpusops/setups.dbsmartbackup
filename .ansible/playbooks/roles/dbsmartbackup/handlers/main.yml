---
- become: true
  block:
  - listen: restart_cops_dbsmartbackup
    systemd:
      daemon_reload: yes
      state: restarted
      name: "{{item}}"
    with_items: "{{cops_dbsmartbackup_vars.services}}"
    when: "(cops_dbsmartbackup_vars.activated and
            corpusops_vars.has_services_manager and
            (ansible_service_mgr == 'systemd'))"
  - listen: restart_cops_dbsmartbackup
    service:
      state: restarted
      name: "{{item}}"
    with_items: "{{cops_dbsmartbackup_vars.services}}"
    when: "(cops_dbsmartbackup_vars.activated and
            corpusops_vars.has_services_manager and
            (ansible_service_mgr != 'systemd'))"
  - listen: reload_cops_dbsmartbackup
    systemd:
      daemon_reload: yes
      state: reloaded
      name: "{{item}}"
    with_items: "{{cops_dbsmartbackup_vars.services}}"
    when: "(cops_dbsmartbackup_vars.activated and
            corpusops_vars.has_services_manager and
            (ansible_service_mgr == 'systemd'))"
  - listen: reload_cops_dbsmartbackup
    service:
      state: reloaded
      name: "{{item}}"
    with_items: "{{cops_dbsmartbackup_vars.services}}"
    when: "(cops_dbsmartbackup_vars.activated and
            corpusops_vars.has_services_manager and
            (ansible_service_mgr != 'systemd'))"
